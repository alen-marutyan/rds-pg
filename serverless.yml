org: marutyan21
app: rds
service: rds
frameworkVersion: '3'


custom:
  DB_NAME: dbname
  DB_USERNAME: dbusername
  DB_PASSWORD: dbpassword
  DB_PORT: !GetAtt RDSInstance.Endpoint.Port
  PROXY_ENDPOINT: !GetAtt RDSProxy.Endpoint
  PROXY_NAME: example-proxy-name-${opt:stage, 'dev'}
  VPC_CIDR: 10

provider:
  name: aws
  runtime: nodejs14.x
  region: us-east-1
  vpc:
    securityGroupIds:
      - !Ref LambdaSecurityGroup
    subnetIds:
      - !Ref SubnetA
      - !Ref SubnetB
#  iam:
#    role:
#      statements:
#        - Effect: Allow
#          Action:
#            - ssm:GetParameter0
#            - rds-db:connect
#          Resource: "*"

  environment:
    NODE_ENV: ${opt:stage, 'dev'}
    DB_NAME: ${self:custom.DB_NAME}
    DB_USER: ${self:custom.DB_USERNAME}
    DB_PASS: ${self:custom.DB_PASSWORD}
    DB_PORT: ${self:custom.DB_PORT}
    DB_HOST: ${self:custom.PROXY_ENDPOINT}

#    youtubeName: 'youtube-table-${sls:stage}'
#    myTableName: my_table
#    DB_NAME: rds
#    USERNAME: postgres
#    PASSWORD: root1234
#    HOST:
#      Fn::GetAtt: [ pgDB, Endpoint.Address ]
#    PORT:
#      Fn::GetAtt: [ pgDB, Endpoint.Port ]

functions:
  createUser:
    handler: src/lambda/user/create.handler
    events:
      - http:
          path: create
          method: post
          cors: true

  editUser:
    handler: src/lambda/user/edit.handler
    events:
      - http:
          path: edit/{id}
          method: put
          cors: true

  deleteUser:
    handler: src/lambda/user/delete.handler
    events:
      - http:
          path: delete/{id}
          method: delete
          cors: true

  findOneUser:
    handler: src/lambda/user/getOne.handler
    events:
      - http:
          path: get/{id}
          method: get
          cors: true

  listUser:
    handler: src/lambda/user/list.handler
    events:
      - http:
          path: list
          method: get
          cors: true
plugins:
  - serverless-pseudo-parameters

resources:
  - ${file(resources/VpcResources.yml)}
  - ${file(resources/RoutingResources.yml)}
  - ${file(resources/RdsResources.yml)}
  - ${file(resources/RdsProxyResources.yml)}
